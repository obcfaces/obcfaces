name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Type check
        run: pnpm run type-check || npx tsc --noEmit
      
      - name: Lint
        run: pnpm run lint || echo "Lint script not configured"

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run tests with coverage
        run: pnpm run test -- --coverage
        env:
          DEFAULT_LOCALE: en-ph
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vitest-coverage
          path: coverage/
          retention-days: 30
      
      - name: Comment coverage summary
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && always()
        with:
          header: coverage
          path: coverage/coverage-summary.json

  e2e:
    name: E2E Tests (${{ matrix.project }})
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, iphone-12]
    env:
      BASE_URL: http://localhost:4173
      TURNSTILE_SITE_KEY: ${{ secrets.TURNSTILE_SITE_KEY_TEST || '1x00000000000000000000AA' }}
      TURNSTILE_SECRET: ${{ secrets.TURNSTILE_SECRET_TEST || '1x0000000000000000000000000000000AA' }}
      DEFAULT_LOCALE: en-ph
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(pnpm list @playwright/test --depth=0 | grep @playwright/test | sed 's/.*@//')" >> $GITHUB_OUTPUT
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}
      
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps chromium webkit
      
      - name: Install Playwright system dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps chromium webkit
      
      - name: Build app
        run: pnpm run build
      
      - name: Run E2E tests
        run: |
          pnpm run preview &
          pnpm exec wait-on $BASE_URL
          pnpm exec playwright test --project=${{ matrix.project }}
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report/
          retention-days: 30
      
      - name: Upload Playwright traces
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces-${{ matrix.project }}
          path: test-results/
          retention-days: 30
      
      - name: Comment E2E results
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && always()
        with:
          header: e2e-${{ matrix.project }}
          message: |
            ## E2E Tests (${{ matrix.project }})
            
            **Status**: ${{ job.status == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}
            
            <details>
            <summary>View Details</summary>
            
            - **Project**: ${{ matrix.project }}
            - **Base URL**: ${{ env.BASE_URL }}
            - **Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ${{ job.status == 'failure' && 'üìä [View Playwright Report](../../actions/runs/${{ github.run_id }})' || '' }}
            ${{ job.status == 'failure' && 'üé• [View Traces & Videos](../../actions/runs/${{ github.run_id }})' || '' }}
            
            </details>

  e2e-staging:
    name: E2E Tests (Staging)
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      BASE_URL: ${{ secrets.STAGING_URL }}
      TURNSTILE_SITE_KEY: ${{ secrets.TURNSTILE_SITE_KEY_TEST }}
      TURNSTILE_SECRET: ${{ secrets.TURNSTILE_SECRET_TEST }}
      DEFAULT_LOCALE: en-ph
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright
        run: pnpm exec playwright install --with-deps chromium
      
      - name: Run E2E tests against staging
        run: pnpm exec playwright test --project=chromium
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-staging
          path: playwright-report/
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build
        run: pnpm run build
      
      - name: Check bundle size
        run: |
          echo "## Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "### JavaScript Bundles" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -lh dist/assets/*.js || echo "No JS bundles found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "### Total Size" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          du -sh dist/ || echo "No dist directory" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7
