name: Deploy Supabase (DB + Edge)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - "supabase/**"
      - ".github/workflows/deploy-supabase.yml"

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Check environment variables
        run: |
          test -n "$SUPABASE_ACCESS_TOKEN"
          test -n "$SUPABASE_PROJECT_REF"

      - name: Push database migrations (remote)
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -euo pipefail
          echo "🚀 Pushing local migrations to remote…"
          # fail fast, если секрет пустой
          if [ -z "${SUPABASE_DB_URL:-}" ]; then
            echo "❌ SUPABASE_DB_URL is empty or not available to this workflow run." >&2
            exit 1
          fi
          
          # до 5 попыток — на случай кратковременных рестартов
          for i in {1..5}; do
            if yes | supabase db push --include-all --db-url "$SUPABASE_DB_URL" --yes --debug; then
              echo "✅ Migrations pushed successfully."
              exit 0
            fi
            echo "⚠️ Push failed (attempt $i). Retrying in 20s…"
            sleep 20
          done
          
          echo "❌ Failed to push migrations after retries." >&2
          exit 1

      - name: Deploy edge functions (if exist)
        if: ${{ hashFiles('supabase/edge-functions/**') != '' }}
        shell: bash
        run: |
          set -e
          if [ -d "supabase/edge-functions/vote-cast" ]; then
            supabase functions deploy vote-cast
          fi
          if [ -d "supabase/edge-functions/rate-cast" ]; then
            supabase functions deploy rate-cast
          fi
